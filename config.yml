---
# if location is a region name the cluster will be multi-zone with that amount of nodes per zone
# otherwise will be a single-zone cluster with that amount of nodes as total
cluster:
  # type: gke
  # config:
  #   cluster_name: "cluster"
  #   project: "cybertruck"
  #   credential_file: "~/cybertruck-admin.json"
  #   # location: "europe-north1"
  #   # nodes: "1"
  #   # machine_type:  "n1-standard-1"
  #   # cluster_version: "1.15.7-gke.23"
  #   # network_policy: "true"
  #   # network_policy_provider: "CALICO"

## Otherwise use Kubernetes in Docker KinD
  type: kind
  name: "mycluster"
  config:
    kind: Cluster
    apiVersion: kind.x-k8s.io/v1alpha4
    # networking:
    #   apiServerAddress: "10.10.10.50"
    nodes:
    - role: control-plane
    - role: worker
  ## Enabling persistent storage outside of container (needed by each worker)
  #     extraMounts:
  #       - hostPath: /tmp
  #         containerPath: /var/local-path-provisioner

kubernetes:
  globals:
    domain_name: local.dev
  namespaces: 
    - name: ingress
    # - name: test
    #   annotations:
    #     key: value
    #   labels:
    #     key: value
    #   limits:
    #     default:
    #       memory: 600Mi
    #     defaultRequest:
    #       memory: 200Mi
    #     type: container
    #     max:
    #       memory: 2Gi
    #     min:
    #       memory: 1Gi
    #   quotas:
    #     hard:
    #       requests.cpu: "1"
    #       requests.memory: "1Gi"
    #       limits.cpu: "2"
    #       limits.memory: "2Gi"
    #       pods: "20"
    - name: cert-manager
    - name: monitoring
    - name: cicd
  helm:
    - releaseName: ingress
      namespace: ingress
      repo: https://kubernetes-charts.storage.googleapis.com
      chart: nginx-ingress
      version: "1.34.2"
      customValues: # can be a string filename ora k/v map like this, if nothing to pass add it as empty map: {}
        controller:
          service:
            type: NodePort
    - releaseName: prometheus
      namespace: monitoring
      repo: https://kubernetes-charts.storage.googleapis.com
      chart: prometheus
      version: "11.0.3"
      customValues: {}
    - releaseName: grafana
      namespace: monitoring
      repo: https://kubernetes-charts.storage.googleapis.com
      chart: grafana
      version: "5.0.8"
      customValues: {}
    - releaseName: autoscaler
      namespace: monitoring
      repo: https://kubernetes-charts.storage.googleapis.com
      chart: prometheus-adapter
      version: "2.1.3"
      customValues:
        prometheus:
          url: "http://prometheus-server.monitoring"
          port: "80"
    - releaseName: jenkins
      namespace: cicd
      repo: https://kubernetes-charts.storage.googleapis.com
      chart: jenkins
      version: "1.10.1"
      extraOptions: "--timeout 10m"
      customValues: "/tmp/values.yaml"
  kubectl_raw:
    - name: "Install cert-manager"
      cmds:
        - "apply --validate=false -f https://github.com/jetstack/cert-manager/releases/download/v0.12.0/cert-manager.yaml"
        - "-n cert-manager rollout status deployment cert-manager"
  addons: 
    - role: ingress-kind-proxy
      namespace: ingress
      vars:
        releaseName: ingress
        # publishAddr: "10.10.10.50"
    # - role: certmanager
    #   namespace: cert-manager
    #   vars: {}
    # - role: expose-monitoring
    #   namespace: monitoring
    #   vars: {}
